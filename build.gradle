plugins {
    id 'idea'
    id 'nebula.release' version '15.3.0'
    id 'org.springframework.boot' version '2.5.4' apply false
    id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false
    id 'com.github.spotbugs' version '4.7.3' apply false
}

group = 'dev.tomek'

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.github.spotbugs'
    apply plugin: 'checkstyle'

    sourceCompatibility = 16
    tasks.withType(JavaCompile).each {
        it.options.compilerArgs.addAll('--enable-preview', '-Xlint:preview')
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }

    ext {
        springCloudVersion = 'Hoxton.SR8'
        lombokVersion = '1.18.20'
        jacksonVersion = '2.12.5'
        natsStarterVersion = '0.4.0'
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-activemq'
        implementation 'org.springframework.amqp:spring-rabbit'
        implementation 'org.apache.pulsar:pulsar-client:2.6.2'
        implementation 'io.nats:jnats:2.8.0'
        implementation "io.nats:nats-spring-boot-starter:$natsStarterVersion"
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'com.sproutsocial:nsq-j:1.0'

        // spring-cloud-stream + nats
//        implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
//        implementation 'org.springframework.cloud:spring-cloud-stream'
//        implementation "io.nats:nats-spring-cloud-stream-binder:$natsStarterVersion"

        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"

        // for serializing records
        implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
        implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'io.projectreactor:reactor-test'
        implementation platform('org.testcontainers:testcontainers-bom:1.15.3')
        testImplementation 'org.testcontainers:testcontainers'
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.testcontainers:rabbitmq'
        testImplementation 'org.testcontainers:kafka'
        testImplementation 'org.testcontainers:pulsar'

        compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugs.toolVersion.get()}"
    }

    if (!project.name.endsWith("common")) {

        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-webflux'
            implementation 'org.springframework.boot:spring-boot-starter-actuator'
            runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
            implementation project(':common')

            implementation 'org.apache.kafka:kafka-clients:2.5.0'
        }

        test {
            useJUnitPlatform()
            jvmArgs(['--enable-preview', '-XX:+ShowCodeDetailsInExceptionMessages'])
            // show failing test stacktrace in output
            testLogging {
                exceptionFormat = 'full'
                showStandardStreams = true
            }
        }
    }

    spotbugs {
        toolVersion = '4.1.4'
    }

    spotbugsMain {
        reports {
            html.enabled = true
        }
    }

    checkstyle {
        toolVersion = '9.0'
    }
}
